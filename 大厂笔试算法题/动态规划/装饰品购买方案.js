/**
 * 小团正在装饰自己的书桌，他的书桌上从左到右有m个空位需要放上装饰物。
 * 商店中每个整数价格的装饰物恰好有一种，且每种装饰物的数量无限多。
 * 小团去商店的时候，想到了一个购买方案，他要让右边的装饰物价格是左边的倍数。
 * 用数学语言来说，假设小团的m个装饰物价格为a1,a2,...am，那么对于任意的1<=i<=j<=m,aj是ai的倍数。
 * 
 * 小团是一个节约的人，他希望最贵的装饰物不超过n元。现在请你计算小团有多少种购买方案。
 */
/**
 * 输入描述：输入包含两个数，n和m（1<=n,m<=1000）
 * 输出描述：输出一个数，结果对998244353取模
 * 样例输入：4  2
 * 样例输出：8
 * 提示：样例解释为[1,1] [1,2] [1,3] [1,4] [2,2] [2,4] [3,3] [4,4]共8种
 */
//n为最贵价格，m为装饰物件数
function getProjects(n,m){
    // let mod=998244353;
    let dp=new Array(m+1);
    let res=0;
    for(let i=0;i<=n;i++){
        dp[i]=(new Array(n+1)).fill(0);
    }


    for(let i=1;i<=n;i++){
        dp[1][i]=1;
    }
    // dp[i][j]表示当前放了i个装饰品，最后一个装饰品是最大价格j的方案数
    for(let i=1;i<=m;i++){
        for(let j=1;j<=n;j++){
            for(let k=j;k<=n;k+=j){
                dp[i+1][k]=dp[i+1][k]+dp[i][j];
            }
        }
    }

    for(let i=1;i<=n;i++){
        console.log(dp[m][i]);
        res=res+dp[m][i];
    }
    return res;
}

console.log(getProjects(4,2));
